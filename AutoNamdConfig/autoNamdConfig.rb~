#!/usr/bin/perl

# autoNamdConfig.pl
#   write the next namd config file in an ongoing sequence


# Read necessary information from the previous log file
sub digestPrevLogFile {
  
  my $logFileName = shift(@_);
  local $lastTimestep = 0;
  # get ending step
  #   keep looking until a valid ending is found
  $logTail = `tail -n 20 $logFileName`;
  print $logTail;

  @logLines = split("\n",$logTail);
  foreach $line (@logLines) {
    #print "--- $line\n";
    if ($line =~ /WRITING VELOCITIES TO OUTPUT FILE AT STEP (\d*)/) {
      $lastTimestep = $1;
      print "last timestep: $lastTimestep\n";
    }
  }

  # check to see whether the job completed correctly or not

  return $lastTimestep;
}


# Read template file while writing the output config file
#   writeConfigFile(templateFileName,previousRunNum,lastTimestep);
sub writeConfigFile {
  # template file name - specific for the given system
  my $templateFileName = shift(@_);
  my $previousLogFileName = shift(@_);
  %month = (0 => "January",
	    1 => "February",
	    2 => "March",
	    3 => "April",
	    4 => "May",
	    5 => "June",
	    6 => "July",
	    7 => "August",
	    8 => "September",
	    9 => "October",
	    10 => "November",
	    11 => "December");
  ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
  $year += 1900;
  local $date = "$month{$mon} $mday, $year";

  local $previousRunNum = 0;
  if ($previousLogFile =~ /eq(\d+)/) {
    $previousRunNum = $1;
  }
  local $currentRunNum = $previousRunNum + 1;

  local $lastTimestep = digestPrevLogFile($previousLogFileName);
  local $nextTimestep = $lastTimestep + 1000000;

  local $outFileName = $previousLogFileName;
  $outFileName =~ s/\.log/\.namd/;
  $outFileName =~ s/eq$previousRunNum/eq$currentRunNum/;
  
  open(TEMPLATE, $templateFileName) || die "Cannot open $templateFileName: $!";
  open(OUT, ">$outFileName") || die "Cannot open $outFileName: $!";
  while ($line = <TEMPLATE>) {
    $line =~ s/DATE/$date/;
    $line =~ s/PREVRUN/$previousRunNum/;
    $line =~ s/CURRRUN/$currentRunNum/;
    $line =~ s/PREVTIMESTEP/$lastTimestep/;
    $line =~ s/NEXTTIMESTEP/$nextTimestep/;

    print $line;
    print OUT $line;
  }

  close(TEMPLATE);
  close(OUT);

}


# Read command line arguments
if ($ARGV[0] && $ARGV[1]) {
  $templateConfigFile = $ARGV[0];
  $previousLogFile = $ARGV[1];
} else {
  print("Usage: autoNamdConfig.pl templateConfigFile previousLogFile\n");
  print("   where templateConfigFile is the master namd config file\n");
  print("      that defines how all namd config files should look\n");
  print("   where previousLogFile is the latest namd log file\n");
  exit;
}

writeConfigFile($templateConfigFile,$previousLogFile);

exit 0;
